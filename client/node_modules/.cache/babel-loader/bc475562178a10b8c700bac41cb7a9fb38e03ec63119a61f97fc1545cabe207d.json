{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aweso\\\\Desktop\\\\NNFL\\\\client\\\\src\\\\components\\\\HospitalLocator.js\";\nimport React, { useState, useEffect } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport axios from 'axios';\nimport L from 'leaflet';\n\n// Fix for default marker icon\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\n  iconUrl: require('leaflet/dist/images/marker-icon.png'),\n  shadowUrl: require('leaflet/dist/images/marker-shadow.png')\n});\nconst HospitalLocator = () => {\n  const [hospitals, setHospitals] = useState([]);\n  const [currentLocation, setCurrentLocation] = useState([51.505, -0.09]); // Default location\n\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(position => {\n      setCurrentLocation([position.coords.latitude, position.coords.longitude]);\n      fetchNearbyHospitals(position.coords.latitude, position.coords.longitude);\n    }, error => console.error(error));\n  }, []);\n  const fetchNearbyHospitals = async (lat, lng) => {\n    try {\n      // Using OpenStreetMap's Overpass API to find hospitals\n      const query = `\n                [out:json][timeout:25];\n                (\n                    node[\"amenity\"=\"hospital\"](around:5000,${lat},${lng});\n                    way[\"amenity\"=\"hospital\"](around:5000,${lat},${lng});\n                    relation[\"amenity\"=\"hospital\"](around:5000,${lat},${lng});\n                );\n                out body;\n                >;\n                out skel qt;\n            `;\n      const response = await axios.get(`https://overpass-api.de/api/interpreter?data=${encodeURIComponent(query)}`);\n      setHospitals(response.data.elements);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: '500px',\n      width: '100%'\n    },\n    children: /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: currentLocation,\n      zoom: 13,\n      style: {\n        height: '100%',\n        width: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n        attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), hospitals.map(hospital => /*#__PURE__*/_jsxDEV(Marker, {\n        position: [hospital.lat, hospital.lon],\n        children: /*#__PURE__*/_jsxDEV(Popup, {\n          children: [hospital.tags.name || 'Hospital', /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 29\n          }, this), hospital.tags.address || '']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }, this)\n      }, hospital.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\nexport default HospitalLocator;","map":{"version":3,"names":["React","useState","useEffect","MapContainer","TileLayer","Marker","Popup","axios","L","jsxDEV","_jsxDEV","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","require","iconUrl","shadowUrl","HospitalLocator","hospitals","setHospitals","currentLocation","setCurrentLocation","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","fetchNearbyHospitals","error","console","lat","lng","query","response","get","encodeURIComponent","data","elements","err","style","height","width","children","center","zoom","url","attribution","fileName","_jsxFileName","lineNumber","columnNumber","map","hospital","lon","tags","name","address","id"],"sources":["C:/Users/aweso/Desktop/NNFL/client/src/components/HospitalLocator.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport axios from 'axios';\r\nimport L from 'leaflet';\r\n\r\n// Fix for default marker icon\r\ndelete L.Icon.Default.prototype._getIconUrl;\r\nL.Icon.Default.mergeOptions({\r\n    iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\r\n    iconUrl: require('leaflet/dist/images/marker-icon.png'),\r\n    shadowUrl: require('leaflet/dist/images/marker-shadow.png'),\r\n});\r\n\r\nconst HospitalLocator = () => {\r\n    const [hospitals, setHospitals] = useState([]);\r\n    const [currentLocation, setCurrentLocation] = useState([51.505, -0.09]); // Default location\r\n\r\n    useEffect(() => {\r\n        navigator.geolocation.getCurrentPosition(\r\n            position => {\r\n                setCurrentLocation([position.coords.latitude, position.coords.longitude]);\r\n                fetchNearbyHospitals(position.coords.latitude, position.coords.longitude);\r\n            },\r\n            error => console.error(error)\r\n        );\r\n    }, []);\r\n\r\n    const fetchNearbyHospitals = async (lat, lng) => {\r\n        try {\r\n            // Using OpenStreetMap's Overpass API to find hospitals\r\n            const query = `\r\n                [out:json][timeout:25];\r\n                (\r\n                    node[\"amenity\"=\"hospital\"](around:5000,${lat},${lng});\r\n                    way[\"amenity\"=\"hospital\"](around:5000,${lat},${lng});\r\n                    relation[\"amenity\"=\"hospital\"](around:5000,${lat},${lng});\r\n                );\r\n                out body;\r\n                >;\r\n                out skel qt;\r\n            `;\r\n            const response = await axios.get(`https://overpass-api.de/api/interpreter?data=${encodeURIComponent(query)}`);\r\n            setHospitals(response.data.elements);\r\n        } catch (err) {\r\n            console.error(err);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div style={{ height: '500px', width: '100%' }}>\r\n            <MapContainer \r\n                center={currentLocation} \r\n                zoom={13} \r\n                style={{ height: '100%', width: '100%' }}\r\n            >\r\n                <TileLayer\r\n                    url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                    attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n                />\r\n                {hospitals.map(hospital => (\r\n                    <Marker\r\n                        key={hospital.id}\r\n                        position={[hospital.lat, hospital.lon]}\r\n                    >\r\n                        <Popup>\r\n                            {hospital.tags.name || 'Hospital'}\r\n                            <br />\r\n                            {hospital.tags.address || ''}\r\n                        </Popup>\r\n                    </Marker>\r\n                ))}\r\n            </MapContainer>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default HospitalLocator; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}