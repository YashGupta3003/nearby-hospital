{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aweso\\\\Desktop\\\\NNFL\\\\client\\\\src\\\\components\\\\HospitalLocator.js\";\nimport React, { useState, useEffect } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup, useMap } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport axios from 'axios';\nimport L from 'leaflet';\nimport './HospitalLocator.css';\n\n// Custom marker icons with different colors for different types of facilities\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst createHospitalIcon = color => new L.Icon({\n  iconUrl: `https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-${color}.png`,\n  iconSize: [25, 41],\n  iconAnchor: [12, 41],\n  popupAnchor: [1, -34],\n  shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png',\n  shadowSize: [41, 41]\n});\nconst hospitalIcon = createHospitalIcon('red');\nconst emergencyIcon = createHospitalIcon('orange');\nconst specialtyIcon = createHospitalIcon('violet');\nconst userIcon = createHospitalIcon('blue');\nfunction ChangeView({\n  center,\n  zoom\n}) {\n  const map = useMap();\n  map.setView(center, zoom);\n  return null;\n}\nconst HospitalLocator = () => {\n  const [hospitals, setHospitals] = useState([]);\n  const [filteredHospitals, setFilteredHospitals] = useState([]);\n  const [currentLocation, setCurrentLocation] = useState([51.505, -0.09]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [selectedHospital, setSelectedHospital] = useState(null);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [filters, setFilters] = useState({\n    emergency: false,\n    wheelchair: false,\n    specialty: false,\n    distance: 5 // Default 5km radius\n  });\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(position => {\n      const {\n        latitude,\n        longitude\n      } = position.coords;\n      setCurrentLocation([latitude, longitude]);\n      fetchNearbyHospitals(latitude, longitude);\n    }, error => {\n      console.error('Error getting location:', error);\n      setError('Could not get your location. Please enable location services.');\n      setLoading(false);\n    }, {\n      enableHighAccuracy: true\n    });\n  }, []);\n  useEffect(() => {\n    filterHospitals();\n  }, [hospitals, searchTerm, filters]);\n  const filterHospitals = () => {\n    let filtered = hospitals;\n\n    // Apply search filter\n    if (searchTerm) {\n      filtered = filtered.filter(hospital => hospital.name.toLowerCase().includes(searchTerm.toLowerCase()) || hospital.address.toLowerCase().includes(searchTerm.toLowerCase()));\n    }\n\n    // Apply distance filter\n    filtered = filtered.filter(hospital => {\n      const distance = calculateDistance(currentLocation[0], currentLocation[1], hospital.lat, hospital.lon);\n      return parseFloat(distance) <= filters.distance;\n    });\n\n    // Apply other filters\n    if (filters.emergency) {\n      filtered = filtered.filter(hospital => hospital.emergency === 'Yes');\n    }\n    if (filters.wheelchair) {\n      filtered = filtered.filter(hospital => hospital.wheelchair === 'Yes');\n    }\n    if (filters.specialty) {\n      filtered = filtered.filter(hospital => {\n        var _hospital$services;\n        return ((_hospital$services = hospital.services) === null || _hospital$services === void 0 ? void 0 : _hospital$services.length) > 0;\n      });\n    }\n    setFilteredHospitals(filtered);\n  };\n  const getHospitalIcon = hospital => {\n    var _hospital$services2;\n    if (!hospital) return hospitalIcon;\n    if (hospital.emergency === 'Yes') return emergencyIcon;\n    if (((_hospital$services2 = hospital.services) === null || _hospital$services2 === void 0 ? void 0 : _hospital$services2.length) > 0) return specialtyIcon;\n    return hospitalIcon;\n  };\n  const calculateDistance = (lat1, lon1, lat2, lon2) => {\n    const R = 6371; // Earth's radius in km\n    const dLat = (lat2 - lat1) * Math.PI / 180;\n    const dLon = (lon2 - lon1) * Math.PI / 180;\n    const a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.cos(lat1 * Math.PI / 180) * Math.cos(lat2 * Math.PI / 180) * Math.sin(dLon / 2) * Math.sin(dLon / 2);\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    return (R * c).toFixed(1);\n  };\n  const fetchNearbyHospitals = async (lat, lng) => {\n    try {\n      setLoading(true);\n      const response = await axios.get(`${process.env.REACT_APP_API_URL}/api/hospitals/nearby`, {\n        params: {\n          latitude: lat,\n          longitude: lng,\n          radius: filters.distance * 1000 // Convert km to meters\n        }\n      });\n      if (response.data && Array.isArray(response.data)) {\n        setHospitals(response.data);\n      } else {\n        setError('Invalid response format from server');\n        setHospitals([]);\n      }\n    } catch (err) {\n      console.error('Error fetching hospitals:', err);\n      setError('Could not fetch nearby hospitals. Please try again later.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Finding Nearby Hospitals\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please wait while we locate hospitals in your area...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-icon\",\n        children: \"\\u26A0\\uFE0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => window.location.reload(),\n        className: \"retry-button\",\n        children: \"Try Again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"hospital-locator-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-filters\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search hospitals...\",\n          value: searchTerm,\n          onChange: e => setSearchTerm(e.target.value),\n          className: \"search-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"distance-filter\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Distance: \", filters.distance, \" km\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"range\",\n            min: \"1\",\n            max: \"10\",\n            step: \"0.5\",\n            value: filters.distance,\n            onChange: e => setFilters({\n              ...filters,\n              distance: parseFloat(e.target.value)\n            }),\n            className: \"distance-slider\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filters\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"filter-checkbox\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: filters.emergency,\n              onChange: e => setFilters({\n                ...filters,\n                emergency: e.target.checked\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 29\n            }, this), \"Emergency Services\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"filter-checkbox\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: filters.wheelchair,\n              onChange: e => setFilters({\n                ...filters,\n                wheelchair: e.target.checked\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 29\n            }, this), \"Wheelchair Accessible\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"filter-checkbox\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: filters.specialty,\n              onChange: e => setFilters({\n                ...filters,\n                specialty: e.target.checked\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 29\n            }, this), \"Specialty Services\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"hospital-list\",\n        children: filteredHospitals.map(hospital => {\n          var _hospital$services3;\n          return hospital && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `hospital-card ${(selectedHospital === null || selectedHospital === void 0 ? void 0 : selectedHospital.id) === hospital.id ? 'selected' : ''}`,\n            onClick: () => setSelectedHospital(hospital),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"hospital-card-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: hospital.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"distance\",\n                children: [calculateDistance(currentLocation[0], currentLocation[1], hospital.lat, hospital.lon), \" km\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"address\",\n              children: hospital.address\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"hospital-details\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"detail-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"icon\",\n                  children: \"\\uD83D\\uDCDE\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 240,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: hospital.phone || 'N/A'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 241,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 33\n              }, this), hospital.emergency === 'Yes' && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"emergency-badge\",\n                children: \"\\uD83D\\uDE91 Emergency Services\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 37\n              }, this), hospital.wheelchair === 'Yes' && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"wheelchair-badge\",\n                children: \"\\u267F Wheelchair Accessible\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 29\n            }, this), ((_hospital$services3 = hospital.services) === null || _hospital$services3 === void 0 ? void 0 : _hospital$services3.length) > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"services\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Services:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"service-tags\",\n                children: hospital.services.map((service, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"service-tag\",\n                  children: service\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 259,\n                  columnNumber: 45\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 33\n            }, this)]\n          }, hospital.id || Math.random(), true, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 25\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-container\",\n      children: /*#__PURE__*/_jsxDEV(MapContainer, {\n        center: currentLocation,\n        zoom: 13,\n        style: {\n          height: '100%',\n          width: '100%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(ChangeView, {\n          center: currentLocation,\n          zoom: 13\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TileLayer, {\n          url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n          attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Marker, {\n          position: currentLocation,\n          icon: userIcon,\n          children: /*#__PURE__*/_jsxDEV(Popup, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"current-location-popup\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Your Location\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"You are here\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 21\n        }, this), filteredHospitals.map(hospital => hospital && /*#__PURE__*/_jsxDEV(Marker, {\n          position: [hospital.lat, hospital.lon],\n          icon: getHospitalIcon(hospital),\n          children: /*#__PURE__*/_jsxDEV(Popup, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"hospital-popup\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: hospital.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Address:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 300,\n                  columnNumber: 40\n                }, this), \" \", hospital.address]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 300,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Phone:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 301,\n                  columnNumber: 40\n                }, this), \" \", hospital.phone || 'N/A']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 301,\n                columnNumber: 37\n              }, this), hospital.website && hospital.website !== 'N/A' && /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Website:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 304,\n                  columnNumber: 45\n                }, this), ' ', /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: hospital.website,\n                  target: \"_blank\",\n                  rel: \"noopener noreferrer\",\n                  children: \"Visit website\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 305,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"hospital-status\",\n                children: [hospital.emergency === 'Yes' && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"status-badge emergency\",\n                  children: \"\\uD83D\\uDE91 Emergency Services\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 312,\n                  columnNumber: 45\n                }, this), hospital.wheelchair === 'Yes' && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"status-badge accessible\",\n                  children: \"\\u267F Wheelchair Accessible\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 317,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 310,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"directions-btn\",\n                onClick: e => {\n                  e.stopPropagation();\n                  window.open(`https://www.google.com/maps/dir/?api=1&destination=${hospital.lat},${hospital.lon}`, '_blank');\n                },\n                children: \"Get Directions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 322,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 29\n          }, this)\n        }, hospital.id || Math.random(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 170,\n    columnNumber: 9\n  }, this);\n};\nexport default HospitalLocator;","map":{"version":3,"names":["React","useState","useEffect","MapContainer","TileLayer","Marker","Popup","useMap","axios","L","jsxDEV","_jsxDEV","createHospitalIcon","color","Icon","iconUrl","iconSize","iconAnchor","popupAnchor","shadowUrl","shadowSize","hospitalIcon","emergencyIcon","specialtyIcon","userIcon","ChangeView","center","zoom","map","setView","HospitalLocator","hospitals","setHospitals","filteredHospitals","setFilteredHospitals","currentLocation","setCurrentLocation","loading","setLoading","error","setError","selectedHospital","setSelectedHospital","searchTerm","setSearchTerm","filters","setFilters","emergency","wheelchair","specialty","distance","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","fetchNearbyHospitals","console","enableHighAccuracy","filterHospitals","filtered","filter","hospital","name","toLowerCase","includes","address","calculateDistance","lat","lon","parseFloat","_hospital$services","services","length","getHospitalIcon","_hospital$services2","lat1","lon1","lat2","lon2","R","dLat","Math","PI","dLon","a","sin","cos","c","atan2","sqrt","toFixed","lng","response","get","process","env","REACT_APP_API_URL","params","radius","data","Array","isArray","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","window","location","reload","type","placeholder","value","onChange","e","target","min","max","step","checked","_hospital$services3","id","phone","service","index","random","style","height","width","url","attribution","icon","website","href","rel","stopPropagation","open"],"sources":["C:/Users/aweso/Desktop/NNFL/client/src/components/HospitalLocator.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { MapContainer, TileLayer, Marker, Popup, useMap } from 'react-leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport axios from 'axios';\r\nimport L from 'leaflet';\r\nimport './HospitalLocator.css';\r\n\r\n// Custom marker icons with different colors for different types of facilities\r\nconst createHospitalIcon = (color) => new L.Icon({\r\n    iconUrl: `https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-${color}.png`,\r\n    iconSize: [25, 41],\r\n    iconAnchor: [12, 41],\r\n    popupAnchor: [1, -34],\r\n    shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png',\r\n    shadowSize: [41, 41]\r\n});\r\n\r\nconst hospitalIcon = createHospitalIcon('red');\r\nconst emergencyIcon = createHospitalIcon('orange');\r\nconst specialtyIcon = createHospitalIcon('violet');\r\nconst userIcon = createHospitalIcon('blue');\r\n\r\nfunction ChangeView({ center, zoom }) {\r\n    const map = useMap();\r\n    map.setView(center, zoom);\r\n    return null;\r\n}\r\n\r\nconst HospitalLocator = () => {\r\n    const [hospitals, setHospitals] = useState([]);\r\n    const [filteredHospitals, setFilteredHospitals] = useState([]);\r\n    const [currentLocation, setCurrentLocation] = useState([51.505, -0.09]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    const [selectedHospital, setSelectedHospital] = useState(null);\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    const [filters, setFilters] = useState({\r\n        emergency: false,\r\n        wheelchair: false,\r\n        specialty: false,\r\n        distance: 5 // Default 5km radius\r\n    });\r\n\r\n    useEffect(() => {\r\n        navigator.geolocation.getCurrentPosition(\r\n            position => {\r\n                const { latitude, longitude } = position.coords;\r\n                setCurrentLocation([latitude, longitude]);\r\n                fetchNearbyHospitals(latitude, longitude);\r\n            },\r\n            error => {\r\n                console.error('Error getting location:', error);\r\n                setError('Could not get your location. Please enable location services.');\r\n                setLoading(false);\r\n            },\r\n            { enableHighAccuracy: true }\r\n        );\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        filterHospitals();\r\n    }, [hospitals, searchTerm, filters]);\r\n\r\n    const filterHospitals = () => {\r\n        let filtered = hospitals;\r\n\r\n        // Apply search filter\r\n        if (searchTerm) {\r\n            filtered = filtered.filter(hospital => \r\n                hospital.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n                hospital.address.toLowerCase().includes(searchTerm.toLowerCase())\r\n            );\r\n        }\r\n\r\n        // Apply distance filter\r\n        filtered = filtered.filter(hospital => {\r\n            const distance = calculateDistance(\r\n                currentLocation[0],\r\n                currentLocation[1],\r\n                hospital.lat,\r\n                hospital.lon\r\n            );\r\n            return parseFloat(distance) <= filters.distance;\r\n        });\r\n\r\n        // Apply other filters\r\n        if (filters.emergency) {\r\n            filtered = filtered.filter(hospital => hospital.emergency === 'Yes');\r\n        }\r\n        if (filters.wheelchair) {\r\n            filtered = filtered.filter(hospital => hospital.wheelchair === 'Yes');\r\n        }\r\n        if (filters.specialty) {\r\n            filtered = filtered.filter(hospital => hospital.services?.length > 0);\r\n        }\r\n\r\n        setFilteredHospitals(filtered);\r\n    };\r\n\r\n    const getHospitalIcon = (hospital) => {\r\n        if (!hospital) return hospitalIcon;\r\n        if (hospital.emergency === 'Yes') return emergencyIcon;\r\n        if (hospital.services?.length > 0) return specialtyIcon;\r\n        return hospitalIcon;\r\n    };\r\n\r\n    const calculateDistance = (lat1, lon1, lat2, lon2) => {\r\n        const R = 6371; // Earth's radius in km\r\n        const dLat = (lat2 - lat1) * Math.PI / 180;\r\n        const dLon = (lon2 - lon1) * Math.PI / 180;\r\n        const a = Math.sin(dLat/2) * Math.sin(dLat/2) +\r\n                 Math.cos(lat1 * Math.PI / 180) * Math.cos(lat2 * Math.PI / 180) * \r\n                 Math.sin(dLon/2) * Math.sin(dLon/2);\r\n        const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));\r\n        return (R * c).toFixed(1);\r\n    };\r\n\r\n    const fetchNearbyHospitals = async (lat, lng) => {\r\n        try {\r\n            setLoading(true);\r\n            const response = await axios.get(\r\n                `${process.env.REACT_APP_API_URL}/api/hospitals/nearby`,\r\n                {\r\n                    params: { \r\n                        latitude: lat, \r\n                        longitude: lng,\r\n                        radius: filters.distance * 1000 // Convert km to meters\r\n                    }\r\n                }\r\n            );\r\n\r\n            if (response.data && Array.isArray(response.data)) {\r\n                setHospitals(response.data);\r\n            } else {\r\n                setError('Invalid response format from server');\r\n                setHospitals([]);\r\n            }\r\n        } catch (err) {\r\n            console.error('Error fetching hospitals:', err);\r\n            setError('Could not fetch nearby hospitals. Please try again later.');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    if (loading) {\r\n        return (\r\n            <div className=\"loading-container\">\r\n                <div className=\"loading-spinner\"></div>\r\n                <h2>Finding Nearby Hospitals</h2>\r\n                <p>Please wait while we locate hospitals in your area...</p>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    if (error) {\r\n        return (\r\n            <div className=\"error-container\">\r\n                <div className=\"error-icon\">⚠️</div>\r\n                <h2>Error</h2>\r\n                <p>{error}</p>\r\n                <button onClick={() => window.location.reload()} className=\"retry-button\">\r\n                    Try Again\r\n                </button>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"hospital-locator-container\">\r\n            <div className=\"sidebar\">\r\n                <div className=\"search-filters\">\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Search hospitals...\"\r\n                        value={searchTerm}\r\n                        onChange={(e) => setSearchTerm(e.target.value)}\r\n                        className=\"search-input\"\r\n                    />\r\n                    <div className=\"distance-filter\">\r\n                        <label>Distance: {filters.distance} km</label>\r\n                        <input\r\n                            type=\"range\"\r\n                            min=\"1\"\r\n                            max=\"10\"\r\n                            step=\"0.5\"\r\n                            value={filters.distance}\r\n                            onChange={(e) => setFilters({...filters, distance: parseFloat(e.target.value)})}\r\n                            className=\"distance-slider\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"filters\">\r\n                        <label className=\"filter-checkbox\">\r\n                            <input\r\n                                type=\"checkbox\"\r\n                                checked={filters.emergency}\r\n                                onChange={(e) => setFilters({...filters, emergency: e.target.checked})}\r\n                            />\r\n                            Emergency Services\r\n                        </label>\r\n                        <label className=\"filter-checkbox\">\r\n                            <input\r\n                                type=\"checkbox\"\r\n                                checked={filters.wheelchair}\r\n                                onChange={(e) => setFilters({...filters, wheelchair: e.target.checked})}\r\n                            />\r\n                            Wheelchair Accessible\r\n                        </label>\r\n                        <label className=\"filter-checkbox\">\r\n                            <input\r\n                                type=\"checkbox\"\r\n                                checked={filters.specialty}\r\n                                onChange={(e) => setFilters({...filters, specialty: e.target.checked})}\r\n                            />\r\n                            Specialty Services\r\n                        </label>\r\n                    </div>\r\n                </div>\r\n                <div className=\"hospital-list\">\r\n                    {filteredHospitals.map(hospital => hospital && (\r\n                        <div \r\n                            key={hospital.id || Math.random()}\r\n                            className={`hospital-card ${selectedHospital?.id === hospital.id ? 'selected' : ''}`}\r\n                            onClick={() => setSelectedHospital(hospital)}\r\n                        >\r\n                            <div className=\"hospital-card-header\">\r\n                                <h3>{hospital.name}</h3>\r\n                                <span className=\"distance\">\r\n                                    {calculateDistance(\r\n                                        currentLocation[0],\r\n                                        currentLocation[1],\r\n                                        hospital.lat,\r\n                                        hospital.lon\r\n                                    )} km\r\n                                </span>\r\n                            </div>\r\n                            <p className=\"address\">{hospital.address}</p>\r\n                            <div className=\"hospital-details\">\r\n                                <div className=\"detail-item\">\r\n                                    <span className=\"icon\">📞</span>\r\n                                    <span>{hospital.phone || 'N/A'}</span>\r\n                                </div>\r\n                                {hospital.emergency === 'Yes' && (\r\n                                    <div className=\"emergency-badge\">\r\n                                        🚑 Emergency Services\r\n                                    </div>\r\n                                )}\r\n                                {hospital.wheelchair === 'Yes' && (\r\n                                    <div className=\"wheelchair-badge\">\r\n                                        ♿ Wheelchair Accessible\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                            {hospital.services?.length > 0 && (\r\n                                <div className=\"services\">\r\n                                    <h4>Services:</h4>\r\n                                    <div className=\"service-tags\">\r\n                                        {hospital.services.map((service, index) => (\r\n                                            <span key={index} className=\"service-tag\">\r\n                                                {service}\r\n                                            </span>\r\n                                        ))}\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n            <div className=\"map-container\">\r\n                <MapContainer \r\n                    center={currentLocation} \r\n                    zoom={13} \r\n                    style={{ height: '100%', width: '100%' }}\r\n                >\r\n                    <ChangeView center={currentLocation} zoom={13} />\r\n                    <TileLayer\r\n                        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                        attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n                    />\r\n                    \r\n                    <Marker position={currentLocation} icon={userIcon}>\r\n                        <Popup>\r\n                            <div className=\"current-location-popup\">\r\n                                <h3>Your Location</h3>\r\n                                <p>You are here</p>\r\n                            </div>\r\n                        </Popup>\r\n                    </Marker>\r\n\r\n                    {filteredHospitals.map(hospital => hospital && (\r\n                        <Marker\r\n                            key={hospital.id || Math.random()}\r\n                            position={[hospital.lat, hospital.lon]}\r\n                            icon={getHospitalIcon(hospital)}\r\n                        >\r\n                            <Popup>\r\n                                <div className=\"hospital-popup\">\r\n                                    <h3>{hospital.name}</h3>\r\n                                    <p><strong>Address:</strong> {hospital.address}</p>\r\n                                    <p><strong>Phone:</strong> {hospital.phone || 'N/A'}</p>\r\n                                    {hospital.website && hospital.website !== 'N/A' && (\r\n                                        <p>\r\n                                            <strong>Website:</strong>{' '}\r\n                                            <a href={hospital.website} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                                Visit website\r\n                                            </a>\r\n                                        </p>\r\n                                    )}\r\n                                    <div className=\"hospital-status\">\r\n                                        {hospital.emergency === 'Yes' && (\r\n                                            <span className=\"status-badge emergency\">\r\n                                                🚑 Emergency Services\r\n                                            </span>\r\n                                        )}\r\n                                        {hospital.wheelchair === 'Yes' && (\r\n                                            <span className=\"status-badge accessible\">\r\n                                                ♿ Wheelchair Accessible\r\n                                            </span>\r\n                                        )}\r\n                                    </div>\r\n                                    <button \r\n                                        className=\"directions-btn\"\r\n                                        onClick={(e) => {\r\n                                            e.stopPropagation();\r\n                                            window.open(\r\n                                                `https://www.google.com/maps/dir/?api=1&destination=${hospital.lat},${hospital.lon}`,\r\n                                                '_blank'\r\n                                            );\r\n                                        }}\r\n                                    >\r\n                                        Get Directions\r\n                                    </button>\r\n                                </div>\r\n                            </Popup>\r\n                        </Marker>\r\n                    ))}\r\n                </MapContainer>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default HospitalLocator; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}